(defcfg
  ;; For Linux (set your device input file here)
  input  (device-file "/dev/input/by-path/platform-i8042-serio-0-event-kbd")
  output (uinput-sink "KMonad output"
    "/bin/sleep 1 && /usr/bin/setxkbmap us -option compose:ralt && xmodmap -e 'keycode 47 = colon semicolon' ")

  ;; For Windows
  ;; input  (low-level-hook)                                                                                
  ;; output (send-event-sink)

  ;; For MacOS
  ;; input  (iokit-name "my-keyboard-product-string")
  ;; output (kext)

  ;; Comment this is you want unhandled events not to be emitted
  fallthrough true

  ;; Set this to false to disable any command-execution in KMonad
  allow-cmd true
)

(defsrc
  grv        1    2    3    4    5    6    7    8    9    0    -    =
  tab        q    w    e    r    t    y    u    i    o    p    [    ]
  caps       a    s    d    f    g    h    j    k    l    ;    '    \
  lsft 102d  z    x    c    v    b    n    m    ,    .    /    rsft
  lctl       lmet lalt          spc             ralt rctl
)

(deflayer qwerty-neo
  grv        1    2    3    4    5    6    7    8    9    0    _    @neo
  Tab        q    w    e    r    t    y    u    i    o    p    ß    ´
  @lv3       @ac  s    d    f    g    h    j    k    l    @:3  @lv3 @lv3
  @lv2 @lv4  z    x    c    v    b    n    m    ,    .    /    @lv2
  lctl       lmet @lalt_func    spc             @lv4 _
)                                                     

(deflayer lalt_layer
  grv               1    2    3    4    5    6    7    8    9    0    -    =
  tab               q    w    e    r    t    @swtl @sw1  @sw2  @sw3  @swtr [    ]
  caps              a    s    d    f    g    @swml @sw4  @sw5  @sw6  @swmr '    \
  @lalt_shift 102d  z    x    c    v    b    @swbl @sw7  @sw8  @sw9  @swbr rsft
  lctl              lmet XX            spc             ralt rctl
)

(deflayer lalt_shift_layer
  grv               1    2      3      4    5    6     7     8     9     0     -    =
  tab               q    @swwu  @swcu  r    t    @smwtl @smw1  @smw2  @smw3  @smwtr [    ]
  caps              a    @swwd  @swcd  f    g    @smwml @smw4  @smw5  @smw6  @smwmr '    \
  XX         102d   z    x      c      v    b    @smwbl @smw7  @smw8  @smw9  @smwbr rsft
  lctl              lmet XX            spc               ralt  rctl
)

(deflayer level2
  grv         F1   F2   F3   F4   F5   F6   F7   _    _    _    _    _
  S-tab       Q    W    E    R    T    Y    U    I    O    P    ẞ    ´
  @lv5        A    S    D    F    G    H    J    K    L    ;    \    @lv5
  XX   @lv4   Z    X    C    V    B    N    M    –    .    /    XX
  lctl        lmet @lalt_func2   spc           S-@lv4 _
)

(deflayer neo
  grv        1    2    3    4    5    6    7    8    9    0    _    @neo_querty
  Tab        x    v    l    c    w    k    h    g    f    q    ß    ´
  @lv3       u    i    a    e    o    s    n    r    t    d    y    @lv3
  @neo2 @lv4 u    o    a    p    z    b    m    ,    .    j    @lv2
  lctl       lmet lalt          spc             @lv4 _
)                                                     

(deflayer neo2
  grv        1    2    3    4    5    6    7    8    9    0    _    =
  Tab        X    V    L    C    W    K    H    G    F    Q    ß    ´
  @lv3       U    I    A    E    O    S    N    R    T    D    Y    @lv3
  @lv2 @lv4  U    O    A    P    Z    B    M    ,    .    J    @lv2
  lctl       lmet lalt          spc             @lv4 _
)                                                     

(deflayer level3
  _          _    _    _    _    _    _    _    _    _    _    _    _
  _          @    \_   [    ]    ^    !    <    >    =    &    _    _
  XX         \    /    {    }    *    ?    \(   \)   -    ;    @    XX
  @lv5  #    #    $    |    ~    `    +    %    "    '    ;    @lv5
  _          _    _              _              @lv6 _
)

(deflayer level4
  _         _    _    _    _    _    _    _    _    _    _    _    _
  _         tab  bspc up   del  pgup _    1    2    3    _    -    _
  @lv6      esc  lft  down rght tab  .    4    5    6    0    .    @lv6
  lsft home home _    ins  end  pgdn _    7    8    9    ;    rsft
  _         _    _              ret            XX   _
)  

(deflayer level5
  _         _    _    _    _    _    _    _    _    _    _    _    _
  _         _    _    _    _    _    _    _    _    _    _    _    _
  _         _    _    _    _    _    _    _    _    _    _    _    _
  _   XX    _    _    _    _    _    _    _    _    _    _    _
  _         _    _              _              _    _
)

(deflayer level6
  _         _    _    _    _    _    _    _    _    _    _    _    _
  _         _    _    _    _    _    _    _    _    _    _    _    _
  _         _    _    _    _    _    _    _    _    _    _    _    _
  _   XX    _    _    _    _    _    _    _    _    _    _    _
  _         _    _              _              _    _
)

(deflayer koy
  grv        1    2    3    4    5    6    7    8    9    0    _    =
  Tab        @km  @.3  o    ,    y    v    g    c    @l3  ß    z    ´
  @lv3       @hc  @a2  e    @im  u    d    t    r    @n2  @sc  f    @lv3
  @ko2 x     x    q    ä    ü    ö    b    p    w    m    j    @ko2
  lctl       lmet lalt          spc             @lv4 _
)                                                     

(deflayer koy2
  grv         @qwe @koy _    _    _    _    _    _    _    _    _    _
  S-tab       K    .    O    -    Y    V    G    C    L    ẞ    Z    ~
  @lv5        H    A    E    I    U    D    T    R    N    S    F    @lv5
  XX   X      X    Q    Ä    ü    Ö    B    P    W    M    J    XX
  lctl        lmet lalt          spc           S-@lv4 _
)
#| --------------------------------------------------------------------------
(deflayer koy2
  grv         @qwe @koy _    _    _    _    _    _    _    _    _    _
  S-tab       K    .    O    -    Y    V    G    C    L    ẞ    Z    ~
  @lv5        H    A    E    I    U    D    T    R    N    S    F    @lv5
  XX   X      X    Q    Ä    Ü    Ö    B    P    W    M    J    XX
  lctl        lmet lalt          spc           S-@lv4 _
)
                                                           
(deflayer level5
                                     _
  _         ₁    ₂    ₃    ♀    ♂    ⚥    ϰ    ⟨    ⟩    ₀    ‑    _
  _         θ    ϑ    ο    ϱ    η    _    κ    γ    λ    ψ    φ    θ
  _         χ    α    ε    ι    υ    ς    β    τ    ρ    ν    σ    _
  _   XX    ζ    ξ    ϱ    π    ϵ    ϕ    π    δ    ω    μ    _
  _         _    _              _              _    _
)

(deflayer level6
                                     _
  _         ¬    ∨    ∧    ⊥    ∡    ∥    →    ∞    _    ∅    ­    ¯    _
  _         √    ↦    ∈    ⊂    ℵ    ˘    ×    Γ    Λ    Ψ    Φ    Θ
  _         ℂ    ∀    ∃    _    ∇    _    ⇐    ∂    ℝ    ℕ    Σ    _   _
  _   XX    ℤ    Ξ    ⇒    ∪    ∩    ℚ    Π    Δ    Ω    _    _
  _        _     _              _              _    _
)
  -------------------------------------------------------------------------- |#


(defalias
  lv2 (layer-toggle level2)
  lv3 (layer-toggle level3)
  lv4 (layer-toggle level4)
  lv5 (layer-toggle level5)
  lv6 (layer-toggle level6)

  qwe (layer-switch qwerty-neo)
  koy (layer-switch koy)
  ko2 (layer-toggle koy2)


  neo_querty (layer-switch qwerty-neo)
  neo (layer-switch neo)
  neo2 (layer-toggle neo2)

  d3  (tap-hold-next-release 700 d @lv3)
  k3  (tap-hold-next-release 700 k @lv3)

  da  (tap-hold-next-release 700 d lalt)

  o2  (tap-hold-next-release 700 o @lv2)
  s2  (tap-hold-next-release 700 s @lv2)
  l2  (tap-hold-next-release 700 l @lv2)

  a2  (tap-hold-next-release 700 a @ko2)
  n2  (tap-hold-next-release 700 n @ko2)

  s3  (tap-hold-next-release 700 s @lv3)
  l3  (tap-hold-next-release 700 l @lv3)
  w3  (tap-hold-next-release 700 w @lv3)
  o3  (tap-hold-next-release 700 o @lv3)
  .3  (tap-hold-next-release 700 . @lv3)
  ;3  (tap-hold-next-release 700 ; @lv3)
  :3  (tap-hold-next-release 700 : @lv3)

  i4  (tap-hold-next-release 700 i @lv4)
  ;4  (tap-hold-next-release 700 ; @lv4)

  ac  (tap-hold-next-release 700 a lctl)
  ;c  (tap-hold-next-release 700 ; lctl)
  hc  (tap-hold-next-release 700 h lctl)
  sc  (tap-hold-next-release 700 s lctl)
  lc  (tap-hold-next-release 700 l lctl)
  oc  (tap-hold-next-release 700 o lctl)

  fm  (tap-hold-next-release 700 f lmet)
  jm  (tap-hold-next-release 700 j lmet)
  qm  (tap-hold-next-release 700 q lmet)
  ;m  (tap-hold-next-release 700 ; lmet)
  km  (tap-hold-next-release 700 k lmet)
  im  (tap-hold-next-release 700 i lmet)
                                   
  vm  (tap-hold-next-release 700 v lmet)

  lalt_func (around (layer-toggle lalt_layer) lalt)
  lalt_func2 (around (layer-toggle lalt_shift_layer) lalt)
  lalt_shift (layer-toggle lalt_shift_layer)

  swtl (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) workspace ⬁")
  sw1  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) workspace 1")
  sw2  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) workspace 2")
  sw3  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) workspace 3")
  swtr (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) workspace ⬀")
  swml (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) workspace ⇦")
  sw4  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) workspace 4")
  sw5  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) workspace 5")
  sw6  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) workspace 6")
  swmr (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) workspace ⇨")
  swbl (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) workspace ⬃")
  sw7  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) workspace 7")
  sw8  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) workspace 8")
  sw9  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) workspace 9")
  swbr (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) workspace ⬂")


  smwtl (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move container to workspace ⬁")    
  smw1  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move container to workspace 1")    
  smw2  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move container to workspace 2")    
  smw3  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move container to workspace 3")    
  smwtr (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move container to workspace ⬀")    
  smwml (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move container to workspace ⇦")    
  smw4  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move container to workspace 4")    
  smw5  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move container to workspace 5")    
  smw6  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move container to workspace 6")    
  smwmr (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move container to workspace ⇨")    
  smwbl (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move container to workspace ⬃")    
  smw7  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move container to workspace 7")    
  smw8  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move container to workspace 8")    
  smw9  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move container to workspace 9")    
  smwbr (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move container to workspace ⬂")    


  swwu  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move workspace to output up")
  swwd  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move workspace to output down")

  swcu  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move container to output up")
  swcd  (cmd-button "swaymsg -s $(ls /run/user/1001/sway-ipc.* | head -n 1) move container to output down")


)
